-- CRIAÇÃO DA TABELA "USUÁRIOS"
CREATE TABLE IF NOT EXISTS USERS
(
    ID BINARY(16) NOT NULL PRIMARY KEY,
    CREATED_AT TIMESTAMP NULL,
    UPDATED_AT TIMESTAMP NULL,
    USERNAME VARCHAR(120) NOT NULL,
    NAME VARCHAR(150) NOT NULL,
    EMAIL VARCHAR(150) NOT NULL,
    KINDLE_MAIL VARCHAR(120) NOT NULL,
    BIRTHDAY DATE DEFAULT NULL,
    GENDER ENUM ('MALE', 'FEMALE', 'NOT_INFORMED') NOT NULL,
    PHONE VARCHAR(15) NOT NULL,
    PROFILE_URL VARCHAR(150) NULL,
    PASSWORD VARCHAR(100) NOT NULL,
    STATUS ENUM ('CREATED', 'IN_PROGRESS', 'CANCELED', 'COMPLETE', 'ACTIVE', 'INACTIVE', 'EXPIRED', 'REVOKED', 'CREDENTIALS_EXPIRED', 'BLOCKED') NOT NULL,
    CONSTRAINT UK_USERS_KINDLE_MAIL
        UNIQUE (KINDLE_MAIL),
    CONSTRAINT UK_USERS_MAIL
        UNIQUE (EMAIL)
);

-- CRIAÇÃO DA TABELA "CARGOS / PERMISSÕES"
CREATE TABLE IF NOT EXISTS ROLES
(
    ID BINARY(16) NOT NULL PRIMARY KEY,
    DESCRIPTION ENUM ('USER', 'MODERATOR', 'ADMINISTRATOR') NOT NULL
);

-- CRIAÇÃO DA TABELA DE RELACIONAMENTO "USUÁRIOS > CARGOS / PERMISSÕES"
CREATE TABLE IF NOT EXISTS USER_ROLE
(
    USER_ID BINARY(16) NOT NULL,
    ROLE_ID BINARY(16) NOT NULL,
    PRIMARY KEY (USER_ID, ROLE_ID),
    CONSTRAINT FK_USER_ROLE_USERS_ID
        FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
    CONSTRAINT FK_USER_ROLE_ROLES_ID
        FOREIGN KEY (ROLE_ID) REFERENCES ROLES (ID)
);

-- CRIAÇÃO DA TABELA "TOKENS"
CREATE TABLE IF NOT EXISTS TOKENS
(
    ID BINARY(16) NOT NULL PRIMARY KEY,
    CREATED_AT TIMESTAMP NULL,
    UPDATED_AT TIMESTAMP NULL,
    USER_ID BINARY(16) NULL,
    TOKEN VARCHAR(255) NOT NULL,
    EXPIRATION_DATE DATETIME(6) NULL,
    EXPIRED BIT NULL,
    REVOKED BIT NULL,
    CONSTRAINT UK_TOKENS_TOKEN
        UNIQUE (TOKEN),
    CONSTRAINT FK_TOKENS_USERS_ID
        FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

-- CRIAÇÃO DA TABELA "AUTORES"
CREATE TABLE IF NOT EXISTS AUTHORS
(
    ID BINARY(16) NOT NULL PRIMARY KEY,
    CREATED_AT DATETIME(6) NULL,
    UPDATED_AT DATETIME(6) NULL,
    NAME VARCHAR(100) NULL
);

-- CRIAÇÃO DA TABELA DE "CATEGORIAS"
CREATE TABLE IF NOT EXISTS CATEGORIES
(
    ID BINARY(16) NOT NULL PRIMARY KEY,
    CREATED_AT TIMESTAMP NULL,
    UPDATED_AT TIMESTAMP NULL,
    NAME VARCHAR(255) NULL
);

-- CRIAÇÃO DA TABELA DE "GÊNEROS LITERÁRIOS"
CREATE TABLE IF NOT EXISTS GENRES
(
    ID BINARY(16) NOT NULL PRIMARY KEY,
    CREATED_AT TIMESTAMP NULL,
    UPDATED_AT TIMESTAMP NULL,
    NAME VARCHAR(100) NULL,
    ICON VARCHAR(30) NULL
);

-- CRIAÇÃO DA TABELA DE RELACIONAMENTO "GÊNERO > CATEGORIA"
CREATE TABLE IF NOT EXISTS GENRE_CATEGORY
(
    GENRE_ID BINARY(16) NOT NULL,
    CATEGORY_ID BINARY(16) NOT NULL,
    PRIMARY KEY (GENRE_ID, CATEGORY_ID),
    CONSTRAINT FK_GENRE_CATEGORY_CATEGORIES_ID
        FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES (ID),
    CONSTRAINT FK_GENRE_CATEGORY_GENRES_ID
        FOREIGN KEY (GENRE_ID) REFERENCES GENRES (ID)
);

-- CRIAÇÃO DA TABELA "LIVROS"
CREATE TABLE IF NOT EXISTS BOOKS
(
    ID BINARY(16) NOT NULL PRIMARY KEY,
    CREATED_AT DATETIME(6) NULL,
    UPDATED_AT DATETIME(6) NULL,
    TITLE VARCHAR(150) NULL,
    DESCRIPTION MEDIUMTEXT NULL,
    ISBN VARCHAR(255) NULL,
    GENRE_ID BINARY(16) NULL,
    PAGES INT NULL,
    GDRIVE_ID VARCHAR(255) NULL,
    CONSTRAINT UK_BOOKS_TITLE
        UNIQUE (TITLE),
    CONSTRAINT FK_BOOKS_GENRES_ID
        FOREIGN KEY (GENRE_ID) REFERENCES GENRES (ID)
);

-- CRIAÇÃO DA TABELA DE RELACIONAMENTO "AUTORES > LIVROS"
CREATE TABLE IF NOT EXISTS AUTHOR_BOOK
(
    AUTHOR_ID BINARY(16) NOT NULL,
    BOOK_ID BINARY(16) NOT NULL,
    CONSTRAINT FK_AUTHOR_BOOK_AUTHORS_ID
        FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS (ID),
    CONSTRAINT FK_AUTHOR_BOOK_BOOKS_ID
        FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID)
);

-- CRIAÇÃO DA TABELA "LEITURAS"
CREATE TABLE IF NOT EXISTS READINGS
(
    ID BINARY(16) NOT NULL PRIMARY KEY,
    CREATED_AT DATETIME(6) NULL,
    UPDATED_AT DATETIME(6) NULL,
    BOOK_ID BINARY(16) NULL,
    USER_ID BINARY(16) NULL,
    READING_DATE DATETIME(6) NULL,
    RATING INT NULL,
    CONSTRAINT FK_READINGS_USERS_ID
        FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
    CONSTRAINT FK_READINGS_BOOKS_ID
        FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID)
);

-- CRIAÇÃO DA TABELA "LIVROS SOLICITADOS"
CREATE TABLE IF NOT EXISTS REQUESTED_BOOKS
(
    ID BINARY(16) NOT NULL PRIMARY KEY,
    CREATED_AT TIMESTAMP NULL,
    UPDATED_AT TIMESTAMP NULL,
    TITLE VARCHAR(150) NULL,
    AUTHOR VARCHAR(100) NULL,
    OWNER_USER_ID BINARY(16) DEFAULT NULL,
    STATUS ENUM ('CREATED', 'IN_PROGRESS', 'CANCELED', 'COMPLETE', 'ACTIVE', 'INACTIVE', 'EXPIRED', 'REVOKED', 'CREDENTIALS_EXPIRED', 'BLOCKED') NOT NULL,

    STARTED_AT TIMESTAMP NULL DEFAULT NULL,
    ASSIGNED_USER_ID BINARY(16) DEFAULT NULL,
    CLOSED_AT TIMESTAMP NULL DEFAULT NULL,
    BOOK_ID BINARY(16) NULL,
    USER_IP VARCHAR(255) DEFAULT NULL,

    CONSTRAINT FK_REQUESTED_BOOKS_ASSIGNED_USERS_ID
        FOREIGN KEY (ASSIGNED_USER_ID) REFERENCES USERS (ID),
    CONSTRAINT FK_REQUESTED_BOOKS_OWNER_USERS_ID
        FOREIGN KEY (OWNER_USER_ID) REFERENCES USERS (ID),
    CONSTRAINT FK_REQUESTED_BOOKS_BOOKS_ID
        FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID)
);
-- CRIAÇÃO DA TABELA "AUTORES"
CREATE TABLE IF NOT EXISTS AUTHORS
(
    ID BINARY(16) NOT NULL
        PRIMARY KEY,
    CREATED_AT DATETIME(6) NULL,
    UPDATED_AT DATETIME(6) NULL,
    NAME VARCHAR(255) NULL
);

-- CRIAÇÃO DA TABELA "LIVROS"
CREATE TABLE IF NOT EXISTS BOOKS
(
    ID BINARY(16) NOT NULL
        PRIMARY KEY,
    CREATED_AT DATETIME(6) NULL,
    UPDATED_AT DATETIME(6) NULL,
    DESCRIPTION MEDIUMTEXT NULL,
    GDRIVE_ID VARCHAR(255) NULL,
    PAGES INT NULL,
    TITLE VARCHAR(255) NULL
);

-- CRIAÇÃO DA TABELA DE RELACIONAMENTO "AUTORES > LIVROS"
CREATE TABLE IF NOT EXISTS AUTHOR_BOOK
(
    AUTHOR_ID BINARY(16) NOT NULL,
    BOOK_ID BINARY(16) NOT NULL,
    CONSTRAINT FK_A_B_AUTHOR_ID
        FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHORS (ID),
    CONSTRAINT FK_A_B_BOOK_ID
        FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID)
);

-- CRIAÇÃO DA TABELA "CARGOS / PERMISSÕES"
CREATE TABLE IF NOT EXISTS ROLES
(
    ID BINARY(16) NOT NULL
        PRIMARY KEY,
    DESCRIPTION ENUM ('USER', 'MODERATOR', 'ADMINISTRATOR') NULL
);

-- CRIAÇÃO DA TABELA "USUÁRIOS"
CREATE TABLE IF NOT EXISTS USERS
(
    ID BINARY(16) NOT NULL
        PRIMARY KEY,
    CREATED_AT TIMESTAMP NULL,
    UPDATED_AT TIMESTAMP NULL,
    EMAIL VARCHAR(255) NOT NULL,
    GENDER ENUM ('MALE', 'FEMALE', 'NOT_INFORMED') NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    PHONE VARCHAR(255) NOT NULL,
    PROFILE_URL VARCHAR(255) NULL,
    STATUS ENUM ('CREATED', 'IN_PROGRESS', 'CANCELED', 'COMPLETE', 'ACTIVE', 'INACTIVE', 'EXPIRED', 'REVOKED', 'CREDENTIALS_EXPIRED', 'BLOCKED') NOT NULL,
    USERNAME VARCHAR(255) NOT NULL,
    KINDLE_MAIL VARCHAR(255) NOT NULL,
    CONSTRAINT UK_KINDLE_MAIL
        UNIQUE (KINDLE_MAIL),
    CONSTRAINT UK_USER_MAIL
        UNIQUE (EMAIL)
);

-- CRIAÇÃO DA TABELA "LEITURAS"
CREATE TABLE IF NOT EXISTS READINGS
(
    ID BINARY(16) NOT NULL
        PRIMARY KEY,
    CREATED_AT DATETIME(6) NULL,
    UPDATED_AT DATETIME(6) NULL,
    RATING INT NULL,
    READING_DATE DATETIME(6) NULL,
    BOOK_ID BINARY(16) NULL,
    USER_ID BINARY(16) NULL,
    CONSTRAINT FK_R_USER_ID
        FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
    CONSTRAINT FK_R_BOOK_ID
        FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID)
);

-- CRIAÇÃO DA TABELA "LIVROS SOLICITADOS"
CREATE TABLE IF NOT EXISTS REQUESTED_BOOKS
(
    ID BINARY(16) NOT NULL
        PRIMARY KEY,
    CREATED_AT TIMESTAMP NULL,
    UPDATED_AT TIMESTAMP NULL,
    AUTHOR VARCHAR(255) NULL,
    STATUS ENUM ('CREATED', 'IN_PROGRESS', 'CANCELED', 'COMPLETE', 'ACTIVE', 'INACTIVE', 'EXPIRED', 'REVOKED', 'CREDENTIALS_EXPIRED', 'BLOCKED') NOT NULL,
    TITLE VARCHAR(255) NULL,
    BOOK_ID BINARY(16) NULL,
    USER_ID BINARY(16) NULL,
    CONSTRAINT FK_R_B_USER_ID
        FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
    CONSTRAINT FK_R_B_BOOK_ID
        FOREIGN KEY (BOOK_ID) REFERENCES BOOKS (ID)
);

-- CRIAÇÃO DA TABELA "TOKENS"
CREATE TABLE IF NOT EXISTS TOKENS
(
    ID BINARY(16) NOT NULL
        PRIMARY KEY,
    CREATED_AT TIMESTAMP NULL,
    UPDATED_AT TIMESTAMP NULL,
    TOKEN VARCHAR(255) NOT NULL,
    EXPIRATION_DATE DATETIME(6) NULL,
    EXPIRED BIT NULL,
    REVOKED BIT NULL,
    USER_ID BINARY(16) NULL,
    CONSTRAINT UK_TOKEN
        UNIQUE (TOKEN),
    CONSTRAINT FK_T_USER_ID
        FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

-- CRIAÇÃO DA TABELA DE RELACIONAMENTO "USUÁRIOS > CARGOS / PERMISSÕES"
CREATE TABLE IF NOT EXISTS USER_ROLE
(
    USER_ID BINARY(16) NOT NULL,
    ROLE_ID BINARY(16) NOT NULL,
    PRIMARY KEY (USER_ID, ROLE_ID),
    CONSTRAINT FK_U_R_USER_ID
        FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
    CONSTRAINT FK_U_R_ROLE_ID
        FOREIGN KEY (ROLE_ID) REFERENCES ROLES (ID)
);